#!/bin/bash

echo "==========================================="
echo "  CONFIGURANDO SERVIÃ‡O SYSTEMD MAC-API"
echo "==========================================="

# Detectar o diretÃ³rio atual do projeto
PROJECT_DIR=$(pwd)
USER=$(whoami)

echo "Projeto detectado em: $PROJECT_DIR"
echo "UsuÃ¡rio: $USER"

# Criar arquivo de serviÃ§o systemd
sudo tee /etc/systemd/system/mac-api.service > /dev/null <<EOF
[Unit]
Description=MAC API FastAPI Application
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=$PROJECT_DIR
Environment=PATH=$PROJECT_DIR/venv/bin
ExecStart=/usr/bin/python3 $PROJECT_DIR/app.py
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF

echo "âœ… Arquivo de serviÃ§o criado: /etc/systemd/system/mac-api.service"

# Recarregar systemd
sudo systemctl daemon-reload

# Habilitar o serviÃ§o para iniciar automaticamente
sudo systemctl enable mac-api

echo ""
echo "==========================================="
echo "           SERVIÃ‡O CONFIGURADO"
echo "==========================================="
echo ""
echo "ðŸ“‹ COMANDOS DO SERVIÃ‡O:"
echo "   â€¢ Iniciar:    sudo systemctl start mac-api"
echo "   â€¢ Parar:      sudo systemctl stop mac-api"
echo "   â€¢ Reiniciar:  sudo systemctl restart mac-api"
echo "   â€¢ Status:     sudo systemctl status mac-api"
echo "   â€¢ Logs:       sudo journalctl -u mac-api -f"
echo ""
echo "ðŸ”§ PRÃ“XIMOS PASSOS:"
echo "   1. sudo systemctl start mac-api"
echo "   2. sudo systemctl status mac-api"
echo "   3. curl http://127.0.0.1:8000/"
echo ""
echo "âœ… O serviÃ§o serÃ¡ iniciado automaticamente no boot"
